image: python:3.7.4-alpine3.10

pipelines:
  default:
    - step:
        name: Build
        services:
          - docker
        image: atlassian/pipelines-awscli
        script: 
          - aws ecr get-login --no-include-email --region eu-west-1 > login.sh
          - sh login.sh
          - TAG=${BITBUCKET_COMMIT}
          - export VALSYS_API_BUILD=test
          - docker build --build-arg VALSYS_API_SOCKET=${VALSYS_API_SOCKET} --build-arg VALSYS_API_SERVER=${VALSYS_API_SERVER} --build-arg VALSYS_API_USER=${VALSYS_API_USER} --build-arg VALSYS_API_PASSWORD=${VALSYS_API_PASSWORD} -t $AWS_REGISTRY_URL/vslib:$TAG .
          - docker push $AWS_REGISTRY_URL/vslib:$TAG

    - step:
        name: Unit tests
        services:
          - docker
        image: atlassian/pipelines-awscli
        script:
          #- aws ecr get-login --no-include-email --region eu-west-1 > login.sh
          - sh login.sh
          - TAG=${BITBUCKET_COMMIT}
          - docker run -t $AWS_REGISTRY_URL/vslib:$TAG make test
          - docker run -t $AWS_REGISTRY_URL/vslib:$TAG /bin/bash -c "make coverage-ci"

    - step:
        name: Integration tests
        services:
          - docker
        image: atlassian/pipelines-awscli
        script:
          - aws ecr get-login --no-include-email --region eu-west-1 > login.sh
          - sh login.sh
          - TAG=${BITBUCKET_COMMIT}
          - docker run -t $AWS_REGISTRY_URL/vslib:$TAG /bin/bash -c "make inttest"